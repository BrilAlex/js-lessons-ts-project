[{"D:\\IT-Incubator\\GitHub\\native-js-lessons\\src\\index.tsx":"1","D:\\IT-Incubator\\GitHub\\native-js-lessons\\src\\components\\CurrencyExchange\\CurrencyExchange.tsx":"2","D:\\IT-Incubator\\GitHub\\native-js-lessons\\src\\redux\\actions.ts":"3","D:\\IT-Incubator\\GitHub\\native-js-lessons\\src\\redux\\currencyReducer.ts":"4","D:\\IT-Incubator\\GitHub\\native-js-lessons\\src\\containers\\CurrencyExchangeContainer\\CurrencyEContainer.tsx":"5","D:\\IT-Incubator\\GitHub\\native-js-lessons\\src\\lessons\\lesson2\\lesson2.ts":"6","D:\\IT-Incubator\\GitHub\\native-js-lessons\\src\\App.tsx":"7","D:\\IT-Incubator\\GitHub\\native-js-lessons\\src\\lessons\\lesson3\\Lesson3.tsx":"8","D:\\IT-Incubator\\GitHub\\native-js-lessons\\src\\lessons\\lesson3\\API.ts":"9","D:\\IT-Incubator\\GitHub\\native-js-lessons\\src\\lessons\\lesson3\\lesson_3.ts":"10","D:\\IT-Incubator\\GitHub\\native-js-lessons\\src\\lessons\\lesson1\\lesson1.tsx":"11","D:\\IT-Incubator\\GitHub\\native-js-lessons\\src\\lessons\\lesson3\\Movie.tsx":"12","D:\\IT-Incubator\\GitHub\\native-js-lessons\\src\\redux\\state.ts":"13","D:\\IT-Incubator\\GitHub\\native-js-lessons\\src\\redux\\selectors.ts":"14","D:\\IT-Incubator\\GitHub\\native-js-lessons\\src\\lessons\\lesson4\\lesson_4.ts":"15","D:\\IT-Incubator\\GitHub\\native-js-lessons\\src\\lessons\\lesson4\\Lesson4.tsx":"16","D:\\IT-Incubator\\GitHub\\native-js-lessons\\src\\lessons\\lesson5\\lesson5.ts":"17"},{"size":319,"mtime":1609752860000,"results":"18","hashOfConfig":"19"},{"size":3279,"mtime":1649249832122,"results":"20","hashOfConfig":"19"},{"size":1398,"mtime":1649254610917,"results":"21","hashOfConfig":"19"},{"size":1384,"mtime":1649254969739,"results":"22","hashOfConfig":"19"},{"size":2777,"mtime":1649253064152,"results":"23","hashOfConfig":"19"},{"size":14754,"mtime":1650196305488,"results":"24","hashOfConfig":"19"},{"size":580,"mtime":1651268530126,"results":"25","hashOfConfig":"19"},{"size":2860,"mtime":1651261718934,"results":"26","hashOfConfig":"19"},{"size":856,"mtime":1651259908753,"results":"27","hashOfConfig":"19"},{"size":3986,"mtime":1650539119007,"results":"28","hashOfConfig":"19"},{"size":856,"mtime":1649249705365,"results":"29","hashOfConfig":"19"},{"size":643,"mtime":1651259906877,"results":"30","hashOfConfig":"19"},{"size":280,"mtime":1649249863881,"results":"31","hashOfConfig":"19"},{"size":116,"mtime":1649253020902,"results":"32","hashOfConfig":"19"},{"size":6602,"mtime":1651268194191,"results":"33","hashOfConfig":"19"},{"size":490,"mtime":1651267367511,"results":"34","hashOfConfig":"19"},{"size":8049,"mtime":1651511813308,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1x82tly",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"38"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\IT-Incubator\\GitHub\\native-js-lessons\\src\\index.tsx",[],["73","74"],"D:\\IT-Incubator\\GitHub\\native-js-lessons\\src\\components\\CurrencyExchange\\CurrencyExchange.tsx",[],"D:\\IT-Incubator\\GitHub\\native-js-lessons\\src\\redux\\actions.ts",[],"D:\\IT-Incubator\\GitHub\\native-js-lessons\\src\\redux\\currencyReducer.ts",[],"D:\\IT-Incubator\\GitHub\\native-js-lessons\\src\\containers\\CurrencyExchangeContainer\\CurrencyEContainer.tsx",[],"D:\\IT-Incubator\\GitHub\\native-js-lessons\\src\\lessons\\lesson2\\lesson2.ts",["75"],"D:\\IT-Incubator\\GitHub\\native-js-lessons\\src\\App.tsx",[],"D:\\IT-Incubator\\GitHub\\native-js-lessons\\src\\lessons\\lesson3\\Lesson3.tsx",[],"D:\\IT-Incubator\\GitHub\\native-js-lessons\\src\\lessons\\lesson3\\API.ts",[],"D:\\IT-Incubator\\GitHub\\native-js-lessons\\src\\lessons\\lesson3\\lesson_3.ts",["76"],"import axios from \"axios\";\r\n\r\nconsole.log('lesson 3');\r\n\r\n// Event loop\r\n// https://learn.javascript.ru/event-loop\r\n// https://habr.com/ru/company/ruvds/blog/340508/\r\n// https://www.youtube.com/watch?v=8aGhZQkoFbQ\r\n// https://www.youtube.com/watch?v=j4_9BZezSUA\r\n// https://www.jsv9000.app/\r\n\r\n// Promise\r\n// https://learn.javascript.ru/promise-basics\r\n// https://www.youtube.com/watch?v=1idOY3C1gYU\r\n\r\n\r\n// https://jsonplaceholder.typicode.com/posts/1\r\n// https://habr.com/ru/company/oleg-bunin/blog/417461/?_ga=2.54695343.543933152.1602500664-1040035071.1596811661\r\n\r\nconst axiosInstanceConfig = {\r\n  baseURL: \"https://jsonplaceholder.typicode.com/\",\r\n};\r\n\r\nconst axiosInstance = axios.create(axiosInstanceConfig);\r\n\r\nconst postsAPI = {\r\n  getPost(post_ID: number) {\r\n    return axiosInstance\r\n      .get(`posts/${post_ID}`)\r\n      .then(response => response.data);\r\n  },\r\n  getAllPosts() {\r\n    return axiosInstance\r\n      .get(`posts`)\r\n      .then(response => response.data);\r\n  },\r\n  addNewPost(newPost: { title: string, body: string, userId: number }) {\r\n    return axiosInstance\r\n      .post(\"posts\", newPost)\r\n      .then(response => response.data);\r\n  },\r\n  updatePostData(post_ID: number, newPostData: { id: number, title: string, body: string, userId: number }) {\r\n    return axiosInstance\r\n      .put(`posts/${post_ID}`, newPostData)\r\n      .then(response => response.data);\r\n  },\r\n  updatePostTitle(post_ID: number, newPostTitle: string) {\r\n    return axiosInstance\r\n      .patch(`posts/${post_ID}`, {title: newPostTitle})\r\n      .then(response => response.data);\r\n  },\r\n  deletePost(post_ID: number) {\r\n    return axiosInstance\r\n      .delete(`posts/${post_ID}`)\r\n      .then(response => response.data);\r\n  },\r\n  getUserPosts(user_ID: number) {\r\n    return axiosInstance\r\n      .get(`posts/?userId=${user_ID}`)\r\n      .then(response => response.data);\r\n  },\r\n  getPostComments(post_ID: number) {\r\n    return axiosInstance\r\n      .get(`posts/${post_ID}/comments`)\r\n      .then(response => response.data);\r\n  },\r\n};\r\n\r\npostsAPI.getPost(1).then(data => console.log(\"1. Get single post: \", data));\r\n\r\npostsAPI.getAllPosts().then(data => console.log(\"2. Get posts list: \", data));\r\n\r\nconst newPost = {\r\n  title: \"foo\",\r\n  body: \"bar\",\r\n  userId: 1,\r\n}\r\npostsAPI.addNewPost(newPost).then(data => console.log(\"3. Add a new post: \", data));\r\n\r\nconst newPostData = {\r\n  id: 1,\r\n  title: \"foo\",\r\n  body: \"bar\",\r\n  userId: 1,\r\n}\r\npostsAPI.updatePostData(1, newPostData).then(data => console.log(\"4. Update post data: \", data));\r\n\r\npostsAPI.updatePostTitle(1, \"foo\").then(data => console.log(\"5. Patch post data: \", data));\r\n\r\npostsAPI.deletePost(1).then(data => console.log(\"6. Delete post with ID = 1: \", data));\r\n\r\npostsAPI.getUserPosts(1).then(data => console.log(\"7. Get all posts of user with ID = 1: \", data));\r\n\r\npostsAPI.getPostComments(1).then(data => console.log(\"8. Get all comments of post with ID = 1: \", data));\r\n\r\nconst albumsAPI = {\r\n  getAlbumPhotos(album_ID: number) {\r\n    return axiosInstance.get(`albums/${album_ID}/photos`).then(response => response.data);\r\n  },\r\n};\r\n\r\nalbumsAPI.getAlbumPhotos(1).then(data => console.log(\"9. Get all photos of album with ID = 1: \", data));\r\n\r\nconst usersAPI = {\r\n  getUserAlbums(user_ID: number) {\r\n    return axiosInstance.get(`users/${user_ID}/albums`).then(response => response.data);\r\n  },\r\n  getUserTodos(user_ID: number) {\r\n    return axiosInstance.get(`users/${user_ID}/todos`).then(response => response.data);\r\n  },\r\n  getUserPosts(user_ID: number) {\r\n    return axiosInstance.get(`users/${user_ID}/posts`).then(response => response.data);\r\n  },\r\n};\r\n\r\nusersAPI.getUserAlbums(1).then(data => console.log(\"10. Get all albums of user with ID = 1: \", data));\r\n\r\nusersAPI.getUserTodos(1).then(data => console.log(\"11. Get all todos of user with ID = 1: \", data));\r\n\r\nusersAPI.getUserPosts(1).then(data => console.log(\"12. Get all posts of user with ID = 1 (URI): \", data));\r\n\r\n// just a plug\r\nexport default () => {\r\n};\r\n","D:\\IT-Incubator\\GitHub\\native-js-lessons\\src\\lessons\\lesson1\\lesson1.tsx",[],"D:\\IT-Incubator\\GitHub\\native-js-lessons\\src\\lessons\\lesson3\\Movie.tsx",[],"D:\\IT-Incubator\\GitHub\\native-js-lessons\\src\\redux\\state.ts",[],"D:\\IT-Incubator\\GitHub\\native-js-lessons\\src\\redux\\selectors.ts",[],"D:\\IT-Incubator\\GitHub\\native-js-lessons\\src\\lessons\\lesson4\\lesson_4.ts",["77"],"console.log('lesson 4');\r\n\r\n// http://latentflip.com/loupe/?code=JC5vbignYnV0dG9uJywgJ2NsaWNrJywgZnVuY3Rpb24gb25DbGljaygpIHsKICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gdGltZXIoKSB7CiAgICAgICAgY29uc29sZS5sb2coJ1lvdSBjbGlja2VkIHRoZSBidXR0b24hJyk7ICAgIAogICAgfSwgMjAwMCk7Cn0pOwoKY29uc29sZS5sb2coIkhpISIpOwoKc2V0VGltZW91dChmdW5jdGlvbiB0aW1lb3V0KCkgewogICAgY29uc29sZS5sb2coIkNsaWNrIHRoZSBidXR0b24hIik7Cn0sIDUwMDApOwoKY29uc29sZS5sb2coIldlbGNvbWUgdG8gbG91cGUuIik7!!!PGJ1dHRvbj5DbGljayBtZSE8L2J1dHRvbj4%3D\r\n// https://jakearchibald.com/2015/tasks-microtasks-queues-and-schedules/\r\n\r\n\r\n// Task 01\r\n// Создайте промис, который постоянно находиться в состоянии pending.\r\n// В конструкторе промиса выведите в консоль сообщение \"Promise is created\".\r\n\r\nconst task01 = new Promise(() => {\r\n  console.log(\"Task 01. Promise is created\");\r\n});\r\nconsole.log(task01);\r\n\r\n// Task 02\r\n// Создайте промис, который после создания сразу же переходит в состояние resolve\r\n// и возвращает строку 'Promise Data'\r\n// Получите данные промиса и выведите их в консоль\r\n\r\nconst task02 = Promise.resolve(\"Promise Data\");\r\ntask02.then(response => console.log(\"Task 02. \", response));\r\n\r\n// Task 03\r\n// Создайте промис, который после создания сразу же переходит в состояние rejected\r\n// и возвращает строку 'Promise Error'\r\n// Получите данные промиса и выведите их в консоль\r\n\r\nconst task03 = Promise.reject(\"Promise Error\");\r\ntask03.catch(error => console.log(\"Task 03. \", error));\r\n\r\n// Task 04\r\n// Создайте промис, который переходит в состояние resolved через 3с.\r\n// (Используйте setTimeout)\r\n// и возвращает строку 'Promise Data'\r\n// Получите данные промиса и выведите их в консоль\r\n\r\nconst task04 = new Promise((resolve) => {\r\n  setTimeout((args) => {\r\n    resolve(args);\r\n  }, 3000, {data: \"Promise Data\"});\r\n});\r\ntask04.then(response => console.log(\"Task 04. \", response));\r\n\r\n// Task 05\r\n// Создайте литерал объекта handlePromise со следующими свойствами:\r\n// promise, resolve, reject, onSuccess, onError\r\n// Проинициализируйте первые три свойства null,\r\n// а последние два функциями, которые принимают один параметр и выводят\r\n// в консоль сообщения: первая - `Promise is resolved with data: ${paramName}`\r\n// вторая - `Promise is rejected with error: ${paramName}`\r\n// Создайте три обработчика события click для кнопок \"Create Promise\", \"Resolve Promise\", \"Reject Promise\".\r\n// Первый обработчик, создает промис, заполняет первые три свойства,\r\n// описаного выше объекта: свойство promise получает новый созданный промис,\r\n// свойства resolve и reject получают ссылки на соответствующие функции\r\n// resolve и reject. Следующие два обработчика запускают методы resolve и reject.\r\n\r\ntype HandlePromiseType = {\r\n  promise: null | Promise<any>\r\n  resolve: null | Function\r\n  reject: null | Function\r\n  onSuccess: (paramName: any) => void\r\n  onError: (paramName: any) => void\r\n};\r\n\r\nconst handlePromise: HandlePromiseType = {\r\n  promise: null,\r\n  resolve: null,\r\n  reject: null,\r\n  onSuccess(paramName) {\r\n    console.log(`Promise is resolved with data: ${paramName}`);\r\n  },\r\n  onError(paramName) {\r\n    console.log(`Promise is rejected with error: ${paramName}`);\r\n  },\r\n};\r\n\r\nexport const createPromise = () => {\r\n  handlePromise.promise = new Promise((resolve, reject) => {\r\n    handlePromise.resolve = resolve;\r\n    handlePromise.reject = reject;\r\n  })\r\n    .then(handlePromise.onSuccess)\r\n    .catch(handlePromise.onError);\r\n  console.log(\"Task 05. Promise created\", handlePromise);\r\n};\r\nexport const resolvePromise = () => {\r\n  handlePromise.resolve && handlePromise.resolve(\"Task 05. Data\");\r\n};\r\nexport const rejectPromise = () => {\r\n  handlePromise.reject && handlePromise.reject(\"Task 05. Error\");\r\n};\r\n\r\n// Task 06\r\n// Создайте промис, который через 1 с возвращает строку \"My name is\".\r\n// Создайте функцию onSuccess, которая получает один параметр,\r\n// прибавляет к нему Ваше имя и возвращает новую строку из функции\r\n// Создайте функцию print, которая выводит в консоль значение своего параметра\r\n// Добавьте два метода then и передайте созданные функции.\r\n\r\nconst task06 = new Promise((resolve) => {\r\n  setTimeout((args) => {\r\n    resolve(args.data);\r\n  }, 1000, {data: \"My name is\"});\r\n});\r\nconst onSuccess = (str: any) => {\r\n  return str + \" Alex\";\r\n};\r\nconst print = (value: string) => {\r\n  console.log(\"Task 06. \", value);\r\n};\r\ntask06.then(onSuccess).then(print);\r\n\r\n// Task 7\r\n// Создайте три промиса. Первый промис возвращает объект { name: \"Anna\" } через 2с,\r\n// второй промис возвращает объект {age: 16} через 3 с, а третий {city: ''} через 4с.\r\n// Получите результаты работы промисов, объедините свойства объектов\r\n// и выведите в консоль {name, age, city}\r\n\r\nconst name = new Promise((resolve) => {\r\n  setTimeout((args) => {\r\n    resolve(args);\r\n  }, 2000, {name: \"Anna\"});\r\n});\r\nconst age = new Promise((resolve) => {\r\n  setTimeout((args) => {\r\n    resolve(args);\r\n  }, 3000, {age: 16});\r\n});\r\nconst city = new Promise((resolve) => {\r\n  setTimeout((args) => {\r\n    resolve(args);\r\n  }, 4000, {city: \"\"});\r\n});\r\n\r\nconst task07 = async () => {\r\n  const namePromise: any = await name;\r\n  const agePromise: any = await age;\r\n  const cityPromise: any = await city;\r\n\r\n  return {name: namePromise.name, age: agePromise.age, city: cityPromise.city};\r\n};\r\ntask07().then(response => console.log(\"Task 07. \", response));\r\n\r\n// just a plug\r\nexport default () => {\r\n};","D:\\IT-Incubator\\GitHub\\native-js-lessons\\src\\lessons\\lesson4\\Lesson4.tsx",[],"D:\\IT-Incubator\\GitHub\\native-js-lessons\\src\\lessons\\lesson5\\lesson5.ts",["78"],{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","severity":1,"message":"84","line":395,"column":1,"nodeType":"85","endLine":396,"endColumn":3},{"ruleId":"83","severity":1,"message":"84","line":123,"column":1,"nodeType":"85","endLine":124,"endColumn":3},{"ruleId":"83","severity":1,"message":"84","line":146,"column":1,"nodeType":"85","endLine":147,"endColumn":3},{"ruleId":"83","severity":1,"message":"84","line":232,"column":1,"nodeType":"85","endLine":233,"endColumn":3},"no-native-reassign",["86"],"no-negated-in-lhs",["87"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]